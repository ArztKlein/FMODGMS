<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init FMODGMS
{
    randomize();

    FMODGMS_Util_SecondsToSamples(2,44100);
    
    // Create the system
    FMODGMS_Sys_Create();
    FMODGMS_Sys_Initialize(32);
    
    // Number of bins in Spectrum data
    //show_message(FMODGMS_FFT_Set_WindowSize(128));
    numBins = FMODGMS_FFT_Get_NumBins();
    peakDamping = 0;
    
    // init spectrum visualizer bins
    for (var i=0; i&lt;numBins; i++)
    {
        avgBin[i] = 0;
    } 
    
    // Load sounds
    sound[0] = FMODGMS_Snd_LoadSound(working_directory + "cronolog.s3m");
    sound[1] = FMODGMS_Snd_LoadSound(working_directory + "lemming1.mod");
    sound[2] = FMODGMS_Snd_LoadSound(working_directory + "giana_sisters.xm");
    sound[3] = FMODGMS_Snd_LoadSound(working_directory + "super_mario_rpg-barrel_volcano.it");    
    sound[4] = FMODGMS_Snd_LoadSound(working_directory + "hiyalooped.mp3"); 
    sound[5] = FMODGMS_Snd_LoadSound(working_directory + "looptest.ogg");    
    sound[6] = FMODGMS_Snd_LoadSound(working_directory + "DKC_Water-KM.mid");   // this is only guaranteed to work in Windows

    // set custom loop points for looptest.ogg
    FMODGMS_Snd_Set_LoopPoints(sound[5],176400,352800);
    FMODGMS_Snd_Set_LoopMode(sound[5],1,-1);
    
    // set custom loop points for hiyalooped.mp3
    FMODGMS_Snd_Set_LoopPoints(sound[4],2168851,6680062);
    FMODGMS_Snd_Set_LoopMode(sound[4],1,-1);
    
    // set default loop points for DKC_Water-KM.mid
    if (os_type &lt;&gt; os_linux) FMODGMS_Snd_Set_LoopMode(sound[6],1,-1);
    
    //create a channel
    channel[0] = FMODGMS_Chan_CreateChannel();
    
    // Other Variables
    //vu_on = true;
    sound_index = 0;
    is_playing = false;
    is_paused = false;
    hue = irandom(255);
    hue_shift = 0;
    channel_volume = 1;
    channel_frequency = 1;
    channel_pitch = 1;
    
    window_set_caption("The colours!");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// The colours!
{
    FMODGMS_Sys_Update();
    hue_shift = 0;
    hue = (hue + 1) mod 256;
    
    // update spectrum visualizer values
    for (var i=0; i&lt;numBins; i++)
    {
        var bin = clamp(FMODGMS_FFT_Get_BinValue(i),0,1);
        avgBin[i] = avgBin[i] * peakDamping + bin * (1-peakDamping);
    }  
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="87">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>channel_frequency += 100;
FMODGMS_Chan_Set_Frequency(0,channel_frequency);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="83">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>channel_frequency -= 100;

// Only the OGG track can go below 0 Hz (for reverse playback).
// Make sure MOD tracks don't or else this function will stop working.

if (sound_index &lt;&gt; 4 &amp;&amp; channel_frequency &lt; 100)
    channel_frequency = 100;

FMODGMS_Chan_Set_Frequency(0,channel_frequency);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="81">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>channel_volume = clamp(channel_volume+0.01,0,1);
FMODGMS_Chan_Set_Volume(0,channel_volume);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="69">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>channel_pitch += 0.01;
FMODGMS_Chan_Set_Pitch(0,channel_pitch);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>channel_pitch -= 0.01;

// No negative multiplers allowed

if (channel_pitch &lt; 0.01)
    channel_pitch = 0.01;

FMODGMS_Chan_Set_Pitch(0,channel_pitch);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>channel_volume = clamp(channel_volume-0.01,0,1);
FMODGMS_Chan_Set_Volume(0,channel_volume);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="27">
      <action>
        <libid>1</libid>
        <id>332</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Free FMODGMS
{
    FMODGMS_Sys_Close();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw GUI
{
    //draw_set_font(fnt_unicode);
    //draw_text(0,0,"é³ƒ");

    draw_set_font(fnt_normal);
    draw_set_halign(fa_left);

    // CPU Usage
    shift_hue(0);
    draw_text(16,32,"CPU Usage: ");
    
    var cpu_usage = FMODGMS_Sys_Get_CPUUsage();
    
    draw_set_halign(fa_center);
    shift_hue(16);
    draw_text(210,16,string(cpu_usage) + "%");
    
    draw_set_halign(fa_left);
    draw_healthbar(160,32,260,48,cpu_usage,make_color_rgb(64,64,64),make_color_hsv((hue+42 mod 256),0,255),make_color_hsv((hue+42 mod 256),255,255),0,true,true);
    
    // FPS
    shift_hue(16);
    draw_text(320,32,"FPS: " + string(fps) + "/" + string(room_speed));
    
    // Sound info
    shift_hue(16);
    draw_text(16,64,"Audio Type: " + string(FMODGMS_Snd_Get_Type(sound[sound_index])));
    
    shift_hue(16);
    
    //Play state
    if (!is_playing)
        draw_text(16,112,"State: Stopped");
        
    else
    {
        if (is_paused)
            draw_text(16,112,"State: Paused");
        else
            draw_text(16,112,"State: Playing");            
    } 
    
    // dominant Frequency
    draw_text(496,112,"Dominant Freq.: " + string(FMODGMS_FFT_Get_DominantFrequency()) + " Hz");    
        
    // spectrum
    draw_rectangle_colour(496,144,496+numBins*5,244,c_black,c_black,$202020,$202020,false);
    
    for (var i=0; i&lt;numBins; i++)
    {
        var col;
        
        if (avgBin[i] &lt;= 0.5)
            col = merge_colour(c_lime,c_yellow,avgBin[i]*2);
        else
            col = merge_colour(c_yellow,c_red,(avgBin[i]-0.5)*2);
    
        draw_set_colour(col);
        draw_rectangle(496+i*5+1,244-avgBin[i]*100,496+i*5+4,244,false);
    }       
      
    // draw playback info based on filetype
    
    // modules (MOD, XM, S3M, IT)
    if (sound_index &lt; 4)
        draw_GUI_modules();
    // MP3
    else if (sound_index == 4)
        draw_GUI_mp3();
    //OGG
    else if (sound_index == 5)
        draw_GUI_ogg();
    //the rest
    else
        draw_GUI_generic();
    
    draw_set_color(c_white);
    draw_text(16,304,"Space -- Play/Stop#P - Pause/Unpause#Q/A -- Change volume#W/S -- Change frequency#E/D -- Change pitch");
    
    // Disallow MIDI demo in Linux build
    if (os_type == os_linux)
        draw_text(416,304,"1-6 -- Switch track#F4 -- Toggle fullscreen#Esc -- Quit");
    else
        draw_text(416,304,"1-7 -- Switch track#F4 -- Toggle fullscreen#Esc -- Quit");
    
    shift_hue(16);
    draw_text(16,416,"FMODGMS Test Program " +  GM_version + " - by M.S.T.O.P.");
    shift_hue(16);
    draw_text(16,432,"FMODGMS version: 0.6.1");
    shift_hue(16);
    draw_text(16,448,"FMOD version: Studio 1.08.07");
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="115">
      <action>
        <libid>1</libid>
        <id>531</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_fullscreen</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="80">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pause/Unpause current sound
if (is_playing)
{
    if (!is_paused)
    {
        FMODGMS_Chan_PauseChannel(channel[0]);
        is_paused = true;
    }
    
    else
    {
        FMODGMS_Chan_ResumeChannel(channel[0]);
        is_paused = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="70">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    //vu_on = !vu_on;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="55">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// This might not work in Linux, so don't do anything in that OS just to be safe
if (os_type &lt;&gt; os_linux)
    switch_track(6);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="54">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>switch_track</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>5</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="53">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>switch_track</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>4</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="52">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>switch_track</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>3</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="51">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>switch_track</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>2</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="50">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>switch_track</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="49">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>switch_track</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Start/Stop playing current sound
{
    if (is_playing)
    {
        is_playing = false;
        FMODGMS_Chan_StopChannel(channel[0]);
    }
    
    else
    {
        is_playing = true;
        FMODGMS_Snd_PlaySound(sound[sound_index],channel[0]);
        channel_volume = FMODGMS_Chan_Get_Volume(0);
        channel_frequency = FMODGMS_Chan_Get_Frequency(0);
        channel_pitch = FMODGMS_Chan_Get_Pitch(0);
    }
    
    is_paused = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
